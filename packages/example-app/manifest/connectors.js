// packages/example-app/manifest/connectors.js
// Этот файл описывает все источники данных ("коннекторы"),
// которые использует наше приложение.

module.exports = {
  // --- Коннекторы для Аутентификации ---

  // Хранит активные сессии пользователей. Управляется AuthEngine.
  // Использует 'wise-json' для персистентного хранения на диске,
  // чтобы сессии "переживали" перезапуск приложения.
  "session": { 
    "type": "wise-json", 
    "collection": "sessions" 
  },

  // Хранит данные пользователей (логины, хэши паролей и т.д.).
  // `initialState` определяет, что по умолчанию это будет коллекция объектов.
  "user": { 
    "type": "wise-json", 
    "collection": "user", 
    "initialState": { "items": [] } 
  },

  // --- Коннекторы для Бизнес-логики Кассы ---

  // Хранит полное состояние текущего чека.
  // Это самый важный коннектор для нашей основной логики.
  "receipt": {
    "type": "wise-json",
    "collection": "receipt",
    // `initialState` задает "чистый" чек при первом запуске
    // или после полной очистки.
    "initialState": { 
      "items": [], 
      "itemCount": 0, 
      "total": 0, 
      "discountPercent": 0,
      "discount": 0, 
      "finalTotal": 0, 
      "statusMessage": "" // Для вывода сообщений пользователю ("Купон применен!")
    }
  },

  // Хранит список всех доступных товаров (позиций), которые можно добавить в чек.
  "positions": { 
    "type": "wise-json",
    "collection": "positions",
    "initialState": { "items": [] }
  },
  
  // --- Коннекторы для Состояния UI ---

  // Хранит временное состояние интерфейса, например, текст в поле поиска.
  // Использует 'in-memory', так как эти данные не нужно сохранять
  // между перезапусками приложения.
  "viewState": { 
    "type": "in-memory",
    "initialState": { 
      "query": "",       // Текущий текст в поле поиска товаров
      "filtered": []     // Отфильтрованный массив товаров для отображения
    } 
  }
};