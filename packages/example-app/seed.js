// packages/example-app/seed.js
// –≠—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π Node.js —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
// –û–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é —Å–∞–º–æ–≥–æ –¥–≤–∏–∂–∫–∞, –∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –∫–æ–º–∞–Ω–¥–æ–π `npm run seed`.

const path = require('path');
const WiseJSON = require('wise-json-db/wise-json');
const bcrypt = require('bcrypt');

// –ü—É—Ç—å –∫ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
const DB_PATH = path.resolve(__dirname, 'axle-db-data');

// –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
const initialPositions = [
    { "id": 1, "name": "–•–ª–µ–± –ë–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–π", "price": 45.50 },
    { "id": 2, "name": "–ú–æ–ª–æ–∫–æ 3.2%", "price": 80.00 },
    { "id": 3, "name": "–°—ã—Ä –†–æ—Å—Å–∏–π—Å–∫–∏–π", "price": 250.75 },
    { "id": 4, "name": "–ö–µ—Ñ–∏—Ä 1%", "price": 75.00 },
    { "id": 5, "name": "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", "price": 180.00 }
];

const defaultUser = {
  login: 'kassir',
  password: '123', // –ú—ã –∑–∞—Ö—ç—à–∏—Ä—É–µ–º –µ–≥–æ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º.
  name: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
  role: "–ö–∞—Å—Å–∏—Ä"
};

/**
 * –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î.
 */
async function seedDatabase() {
    console.log(`üå± –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤: ${DB_PATH}`);
    const db = new WiseJSON(DB_PATH);
    
    try {
        await db.init();
        console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.");

        // 1. –ù–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤.
        const positionsCol = await db.getCollection('positions');
        await positionsCol.clear();
        await positionsCol.insertMany(initialPositions);
        console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è "positions" –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ ${initialPositions.length} —Ç–æ–≤–∞—Ä–∞–º–∏.`);

        // 2. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        const userCol = await db.getCollection('user');
        await userCol.clear();
        
        const saltRounds = 10;
        const passwordHash = await bcrypt.hash(defaultUser.password, saltRounds);
        
        const userData = {
            _id: 'user_kassir_default', // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π ID
            login: defaultUser.login,
            passwordHash: passwordHash,
            name: defaultUser.name,
            role: defaultUser.role
        };
        await userCol.insert(userData);
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${defaultUser.login}" —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º "${defaultUser.password}".`);

        // 3. –û—á–∏—â–∞–µ–º "–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ" –∫–æ–ª–ª–µ–∫—Ü–∏–∏.
        await db.getCollection('sessions').then(col => col.clear());
        console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è "sessions" –æ—á–∏—â–µ–Ω–∞.`);
        
        await db.getCollection('receipt').then(col => col.clear());
        console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è "receipt" –æ—á–∏—â–µ–Ω–∞.`);

    } catch (error) {
        console.error('üî• –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã:', error);
    } finally {
        await db.close();
        console.log('‚ú® –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à —Å–∫—Ä–∏–ø—Ç.
seedDatabase();